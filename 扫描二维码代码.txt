#import <AVFoundation/AVFoundation.h>

@interface QrcodeViewController () <AVCaptureMetadataOutputObjectsDelegate>

@property (nonatomic, strong) AVCaptureSession *session;

@end


@implementation QrcodeViewController

- (void)viewDidLoad {
	[super viewDidLoad];
	[AVCaptureDevice requestAccessForMediaType:AVMediaTypeVideo completionHandler:^(BOOL granted) {
		if (granted) {
			dispatch_async(dispatch_get_main_queue(), ^{
				[self loadScanView];
			});
		}
	}];
}

- (void)loadScanView {
	// 获取摄像设备
	AVCaptureDevice *device = [AVCaptureDevice defaultDeviceWithMediaType:AVMediaTypeVideo];
	// 创建输入流
	AVCaptureDeviceInput *input = [AVCaptureDeviceInput deviceInputWithDevice:device error:nil];
	// 创建输出流
	AVCaptureMetadataOutput *output = [[AVCaptureMetadataOutput alloc] init];
	// 设置代理 在主线程里刷新
	[output setMetadataObjectsDelegate:self queue:dispatch_get_main_queue()];
	
	// 初始化链接对象
	self.session = [[AVCaptureSession alloc] init];
	// 高质量采集率
	[self.session setSessionPreset:AVCaptureSessionPresetHigh];
	[self.session addInput:input];
	[self.session addOutput:output];
	
	// 设置扫码支持的编码格式(如下设置条形码和二维码兼容)
	output.metadataObjectTypes = @[AVMetadataObjectTypeQRCode,AVMetadataObjectTypeEAN13Code,AVMetadataObjectTypeEAN8Code,AVMetadataObjectTypeUPCECode,AVMetadataObjectTypeCode39Code,AVMetadataObjectTypeCode39Mod43Code,AVMetadataObjectTypeCode93Code,AVMetadataObjectTypeCode128Code,AVMetadataObjectTypePDF417Code];
	
	AVCaptureVideoPreviewLayer *layer = [AVCaptureVideoPreviewLayer layerWithSession:self.session];
	layer.videoGravity = AVLayerVideoGravityResizeAspectFill;
	layer.frame = self.view.layer.bounds;
	[self.view.layer insertSublayer:layer atIndex:0];
	// 开始捕获
	[self.session startRunning];
}

#pragma mark - AVCaptureMetadataOutputObjectsDelegate
- (void)captureOutput:(AVCaptureOutput *)captureOutput didOutputMetadataObjects:(NSArray *)metadataObjects fromConnection:(AVCaptureConnection *)connection {
	if (metadataObjects.count > 0) {
		[self.session stopRunning];
		AVMetadataMachineReadableCodeObject *metadataObject = metadataObjects[0];
		NSLog(@"%@", metadataObject.stringValue);
	}
}


@end

